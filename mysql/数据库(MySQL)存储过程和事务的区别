本文简单分享一些关于数据库中的存储过程和事务的区别。
存储过程：
一组为了完成特定功能的SQL语句集（或者自定义数据库操作命令集)， 根据传入的参数（也可以没有）， 通过简单的调用， 
完成比单个SQL语句更复杂的功能， 存储在数据库服务器端，只需要编译过一次之后再次使用都不需要再进行编译。
主要对存储的过程进行控制。
优点：
1、执行速度快。尤其对于较为复杂的逻辑，减少了网络流量之间的消耗，另外比较重要的一点是存储过程只在创造时进行编译，以后每次执行存储过程都不需再重新编译，而一般 SQL 语句每执行一次就编译一次,所以使用存储过程可提高数据库执行速度。。
2、提高工作效率。写程序简单，采用存储过程调用类，调用任何存储过程都只要1-2行代码。
3、规范程序设计，升级、维护方便。
4、提高系统安全性。可设定只有某用户才具有对指定存储过程的使用权。
数据量小的，或者和钱没关系的项目不用存储过程也可以正常运作。mysql 的存储过程还有待实际测试。如果是正式项目，建议你用 sql server 或 oracle 的存储过程。数据与数据之间打交道的话，过程会比程序来的快的多。
缺点：
程序部分功能移到了数据库内，破坏了CVM三层结构设计
事务：
一系列的数据更改操作组成的一个整体。这些操作包括存储过程，更改语句及其它操作。一旦事务中包含的某操作失败或用户中止，用户可以控制将事务体中所有操作撤消，返回事务开始前的状态。事务中的操作是一个整体，要么整体完成，要么全部不做。从而保证了数据的完整性。
事务中可以有存储过程 存储过程中也可以有事务。
什么时候使用存储过程比较适合？
1、当一个业务同时对多个表进行处理的时候采用存储过程比较合适。
2、复杂的数据处理用存储过程，如有些报表处理。
3、多条件多表联合查询,并做分页处理。
什么时候使用事务比较适合？
每次使用事务，都会占用一定的开销。另外，事务可能会锁定一些表的行。所以，不必要的事务会导致性能损失。这里有一个规则，只有当操作需要的时候才使用事务。例如，如果只是从数据库中查询一些记录，或者执行单个查询，在大部分时候都不需要显式的事务，因为声明都已经封装在隐式的事务中。但是，正如前文提到，在多声明更新时非常重要，因为事务能够实际提升操作速度。同样，如果需要在节省数毫秒时间和危害数据完整性之间做出一个选择的话，那么正确的答案就是保持数据清洁，不要担心那数毫秒的时间消耗。
另外使用事务之前需要注意的是：尽可能短的保持事务。避免使用在事务中的SELECT返回数据，除非语句依赖于返回数据。如果使用SELECT语句，只选择需要的行，因此不要锁定过多的资源同时保持尽可能高的性能。在架构语序的情况下，从事务中移出所有SELECT语句。这么做是因为事务在处理的过程中会锁定所有被操作的数据行，这样会影响其他并发的sql语句的执行。
